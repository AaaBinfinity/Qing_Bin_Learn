package D4动态初始化;

public class Main {
    public static void main(String[] args) {

        //动态初始化：初始化时只指定数组长度，由系统为数组分配初始值。
        //格式：数据类型[]数组名＝ new数据类型[数组长度];

        //场景：定义一个数组，用来存班级中50个学生的姓名姓名未知，等学生报道之后，再进行添加

        String[] arr = new String[50];

        // 添加学生：
        arr[0] = "Binfinity";
        arr[1] = "Caobin";

        //获取：
        System.out.println(arr[0]);
        System.out.println(arr[1]);
        System.out.println(arr[2]); //还没有定义 打印出来的是null（默认初始化值）

        //数组默认初始化值的规律：


        //整数类型：默认初始化值0
        //小数类型：默认初始化值0.0
        //字符类型：默认初始化值'/u0000' 空格
        //布尔类型：默认初始化值 false
        //引用数据类型（）：默认初始化值 null

/*
动态初始化和静态初始化的区别
动态初始化：手动指定数组长度，由系统给出默认初始化值。
只明确元素个数，不明确具体数值，推荐使用动态初始化

静态初始化：手动指定数组元素，系统会根据元素个数，计算出数组的长度。
需求中已经明确了要操作的具体数据，直接静态初始化
*/

    }
}
